<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanxia.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.sanxia.po.Teacher">
    <id column="tea_num" jdbcType="INTEGER" property="teaNum" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="tea_name" jdbcType="VARCHAR" property="teaName" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="in_sch_year" jdbcType="VARCHAR" property="inSchYear" />
    <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
  </resultMap>
  <sql id="Base_Column_List">
    tea_num, uuid, tea_name, age, sex, phone_num, college, in_sch_year, user_uuid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where tea_num = #{teaNum,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where tea_num = #{teaNum,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sanxia.po.Teacher">
    insert into teacher (tea_num, uuid, tea_name, 
      age, sex, phone_num, 
      college, in_sch_year, user_uuid
      )
    values (#{teaNum,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{teaName,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, 
      #{college,jdbcType=VARCHAR}, #{inSchYear,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanxia.po.Teacher" useGeneratedKeys="true" keyProperty="teaNum">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teaNum != null">
        tea_num,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="teaName != null">
        tea_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="inSchYear != null">
        in_sch_year,
      </if>
      <if test="userUuid != null">
        user_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teaNum != null">
        #{teaNum,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="teaName != null">
        #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="inSchYear != null">
        #{inSchYear,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null">
        #{userUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxia.po.Teacher">
    update teacher
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="teaName != null">
        tea_name = #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="inSchYear != null">
        in_sch_year = #{inSchYear,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null">
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where tea_num = #{teaNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxia.po.Teacher">
    update teacher
    set uuid = #{uuid,jdbcType=VARCHAR},
      tea_name = #{teaName,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      in_sch_year = #{inSchYear,jdbcType=VARCHAR},
      user_uuid = #{userUuid,jdbcType=VARCHAR}
    where tea_num = #{teaNum,jdbcType=INTEGER}
  </update>

  <select id="queryTeacherList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
  </select>
</mapper>