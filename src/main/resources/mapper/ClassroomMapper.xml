<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanxia.dao.ClassroomMapper">
  <resultMap id="BaseResultMap" type="com.sanxia.po.Classroom">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="build_name" jdbcType="VARCHAR" property="buildName" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="room_num" jdbcType="VARCHAR" property="roomNum" />
    <result column="capacity" jdbcType="INTEGER" property="capacity" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uuid, build_name, floor, room_num, capacity, status, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classroom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classroom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sanxia.po.Classroom">
    insert into classroom (id, uuid, build_name, 
      floor, room_num, capacity, 
      status, remark)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{buildName,jdbcType=VARCHAR}, 
      #{floor,jdbcType=VARCHAR}, #{roomNum,jdbcType=VARCHAR}, #{capacity,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanxia.po.Classroom" useGeneratedKeys="true" keyProperty="id">
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="buildName != null">
        build_name,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="roomNum != null">
        room_num,
      </if>
      <if test="capacity != null">
        capacity,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null">
        #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="capacity != null">
        #{capacity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxia.po.Classroom">
    update classroom
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        build_name = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null">
        room_num = #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="capacity != null">
        capacity = #{capacity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxia.po.Classroom">
    update classroom
    set uuid = #{uuid,jdbcType=VARCHAR},
      build_name = #{buildName,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      room_num = #{roomNum,jdbcType=VARCHAR},
      capacity = #{capacity,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryClaRoomList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from classroom
  </select>
</mapper>